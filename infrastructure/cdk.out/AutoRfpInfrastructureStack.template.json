{
 "Description": "AutoRFP Infrastructure - RDS, Cognito, S3, SES with AWS Well-Architected Framework Compliance",
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "TODO: VPC Flow Logs will be added in production for network monitoring",
     "id": "AwsSolutions-VPC7"
    },
    {
     "reason": "TODO: Add automatic secret rotation for production",
     "id": "AwsSolutions-SMG4"
    },
    {
     "reason": "TODO: Restrict database access to specific IP ranges for production",
     "id": "AwsSolutions-EC23"
    },
    {
     "reason": "TODO: Enable Multi-AZ for production high availability",
     "id": "AwsSolutions-RDS3"
    },
    {
     "reason": "TODO: Enable deletion protection for production",
     "id": "AwsSolutions-RDS10"
    },
    {
     "reason": "TODO: Use non-default database port for production",
     "id": "AwsSolutions-RDS11"
    },
    {
     "reason": "TODO: Strengthen password policy to require special characters",
     "id": "AwsSolutions-COG1"
    },
    {
     "reason": "TODO: Enable MFA for production user authentication",
     "id": "AwsSolutions-COG2"
    },
    {
     "reason": "TODO: Enable advanced security mode for production",
     "id": "AwsSolutions-COG3"
    },
    {
     "reason": "TODO: Add Cognito User Pool authorizer to API Gateway",
     "id": "AwsSolutions-COG4"
    },
    {
     "reason": "TODO: Enable S3 server access logging for production",
     "id": "AwsSolutions-S1"
    },
    {
     "reason": "TODO: Add SSL-only bucket policies for production",
     "id": "AwsSolutions-S10"
    },
    {
     "reason": "TODO: Update to latest Node.js runtime version",
     "id": "AwsSolutions-L1"
    },
    {
     "reason": "TODO: Replace AWS managed policies with custom policies",
     "id": "AwsSolutions-IAM4"
    },
    {
     "reason": "TODO: Remove wildcard permissions and use specific resource ARNs",
     "id": "AwsSolutions-IAM5"
    },
    {
     "reason": "TODO: Enable API Gateway access logging for production",
     "id": "AwsSolutions-APIG1"
    },
    {
     "reason": "TODO: Add request validation to API Gateway",
     "id": "AwsSolutions-APIG2"
    },
    {
     "reason": "TODO: Associate API Gateway with AWS WAF for production",
     "id": "AwsSolutions-APIG3"
    },
    {
     "reason": "TODO: Implement API Gateway authorization",
     "id": "AwsSolutions-APIG4"
    },
    {
     "reason": "TODO: Add geo restrictions if needed for production",
     "id": "AwsSolutions-CFR1"
    },
    {
     "reason": "TODO: Integrate CloudFront with AWS WAF for production",
     "id": "AwsSolutions-CFR2"
    },
    {
     "reason": "TODO: Enable CloudFront access logging for production",
     "id": "AwsSolutions-CFR3"
    },
    {
     "reason": "TODO: Update CloudFront to use TLS 1.2+ minimum",
     "id": "AwsSolutions-CFR4"
    },
    {
     "reason": "TODO: Use Origin Access Control instead of OAI",
     "id": "AwsSolutions-CFR7"
    }
   ]
  }
 },
 "Resources": {
  "AutoRfpVpc91A0113F": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AutoRfpInfrastructureStack/AutoRfpVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/Resource"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet1Subnet04125A94": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet1/Subnet"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet1RouteTable3AAEF1A2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet1/RouteTable"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet1RouteTableAssociationF823B53D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AutoRfpVpcpublicsubnetSubnet1RouteTable3AAEF1A2"
    },
    "SubnetId": {
     "Ref": "AutoRfpVpcpublicsubnetSubnet1Subnet04125A94"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet1DefaultRouteA08B07C3": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AutoRfpVpcIGW854FD599"
    },
    "RouteTableId": {
     "Ref": "AutoRfpVpcpublicsubnetSubnet1RouteTable3AAEF1A2"
    }
   },
   "DependsOn": [
    "AutoRfpVpcVPCGW92FF52E2"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet1/DefaultRoute"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet2SubnetB07A0457": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet2/Subnet"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet2RouteTableA2DA2368": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet2/RouteTable"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet2RouteTableAssociationF4C1F094": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AutoRfpVpcpublicsubnetSubnet2RouteTableA2DA2368"
    },
    "SubnetId": {
     "Ref": "AutoRfpVpcpublicsubnetSubnet2SubnetB07A0457"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet2/RouteTableAssociation"
   }
  },
  "AutoRfpVpcpublicsubnetSubnet2DefaultRoute76B865B9": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AutoRfpVpcIGW854FD599"
    },
    "RouteTableId": {
     "Ref": "AutoRfpVpcpublicsubnetSubnet2RouteTableA2DA2368"
    }
   },
   "DependsOn": [
    "AutoRfpVpcVPCGW92FF52E2"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/public-subnetSubnet2/DefaultRoute"
   }
  },
  "AutoRfpVpcIGW854FD599": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AutoRfpInfrastructureStack/AutoRfpVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/IGW"
   }
  },
  "AutoRfpVpcVPCGW92FF52E2": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "AutoRfpVpcIGW854FD599"
    },
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/VPCGW"
   }
  },
  "AutoRfpVpcRestrictDefaultSecurityGroupCustomResourceBE197190": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "AutoRfpVpc91A0113F",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "039885961427"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpVpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:039885961427:security-group/",
             {
              "Fn::GetAtt": [
               "AutoRfpVpc91A0113F",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-039885961427-us-east-1",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "AutoRfpDbSecretB244B8E1": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludeCharacters": "\"@/\\",
     "GenerateStringKey": "password",
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    },
    "Name": "auto-rfp/database"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDbSecret/Resource"
   }
  },
  "AutoRfpDbSecretAttachmentCF4B58E1": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "AutoRfpDbSecretB244B8E1"
    },
    "TargetId": {
     "Ref": "AutoRfpDatabaseB374604B"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDbSecret/Attachment/Resource"
   }
  },
  "AutoRfpLambdaSecurityGroupC2026AB7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for AutoRFP Lambda functions",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpLambdaSecurityGroup/Resource"
   }
  },
  "AutoRfpDbSecurityGroup68A85016": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for AutoRFP RDS database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow PostgreSQL access from anywhere (for development)",
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Ref": "AutoRfpVpc91A0113F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDbSecurityGroup/Resource"
   }
  },
  "AutoRfpDbSecurityGroupfromAutoRfpInfrastructureStackAutoRfpLambdaSecurityGroup986D38AC5432F9EEFBF8": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow PostgreSQL access from Lambda",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "AutoRfpDbSecurityGroup68A85016",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AutoRfpLambdaSecurityGroupC2026AB7",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDbSecurityGroup/from AutoRfpInfrastructureStackAutoRfpLambdaSecurityGroup986D38AC:5432"
   }
  },
  "AutoRfpDatabaseSubnetGroup0BBFE913": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for AutoRfpDatabase database",
    "SubnetIds": [
     {
      "Ref": "AutoRfpVpcpublicsubnetSubnet1Subnet04125A94"
     },
     {
      "Ref": "AutoRfpVpcpublicsubnetSubnet2SubnetB07A0457"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDatabase/SubnetGroup/Default"
   }
  },
  "AutoRfpDatabaseB374604B": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBName": "auto_rfp",
    "DBSubnetGroupName": {
     "Ref": "AutoRfpDatabaseSubnetGroup0BBFE913"
    },
    "DeleteAutomatedBackups": false,
    "DeletionProtection": false,
    "Engine": "postgres",
    "EngineVersion": "15.7",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "AutoRfpDbSecretB244B8E1"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "AutoRfpDbSecretB244B8E1"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MaxAllocatedStorage": 100,
    "MultiAZ": false,
    "PubliclyAccessible": true,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "AutoRfpDbSecurityGroup68A85016",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDatabase/Resource"
   }
  },
  "AutoRfpUserPool0E232BBC": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": false,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "given_name",
      "Required": false
     },
     {
      "Mutable": true,
      "Name": "family_name",
      "Required": false
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "auto-rfp-users",
    "UsernameAttributes": [
     "email"
    ],
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpUserPool/Resource"
   }
  },
  "AutoRfpUserPoolClientE2FC917B": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "email",
     "openid",
     "profile"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ClientName": "auto-rfp-client",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "AutoRfpUserPool0E232BBC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpUserPoolClient/Resource"
   }
  },
  "AutoRfpDocumentsBucketADE14B85": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": {
     "Fn::Join": [
      "",
      [
       "auto-rfp-documents-",
       {
        "Ref": "AWS::AccountId"
       }
      ]
     ]
    },
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "MaxAge": 300
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Id": "transition-to-ia",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        }
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDocumentsBucket/Resource"
   }
  },
  "AutoRfpWebsiteBucketE42ECF2B": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       "auto-rfp-website-",
       {
        "Ref": "AWS::AccountId"
       }
      ]
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpWebsiteBucket/Resource"
   }
  },
  "AutoRfpWebsiteBucketPolicy36E39D43": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AutoRfpWebsiteBucketE42ECF2B"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AutoRfpWebsiteBucketE42ECF2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AutoRfpWebsiteBucketE42ECF2B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "AutoRfpOAI0493EA57",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "AutoRfpWebsiteBucketE42ECF2B",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "AutoRfpOAI0493EA57",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AutoRfpWebsiteBucketE42ECF2B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AutoRfpWebsiteBucketE42ECF2B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpWebsiteBucket/Policy/Resource"
   }
  },
  "AutoRfpWebsiteBucketAutoDeleteObjectsCustomResource4BDA312D": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AutoRfpWebsiteBucketE42ECF2B"
    }
   },
   "DependsOn": [
    "AutoRfpWebsiteBucketPolicy36E39D43"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpWebsiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-039885961427-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AutoRfpWebsiteBucketE42ECF2B"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "AutoRfpApiHandlerServiceRoleD59FC906": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApiHandler/ServiceRole/Resource"
   }
  },
  "AutoRfpApiHandlerServiceRoleDefaultPolicy308B0E8E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AutoRfpDbSecretB244B8E1"
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AutoRfpDocumentsBucketADE14B85",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AutoRfpDocumentsBucketADE14B85",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AutoRfpUserPool0E232BBC",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AutoRfpApiHandlerServiceRoleDefaultPolicy308B0E8E",
    "Roles": [
     {
      "Ref": "AutoRfpApiHandlerServiceRoleD59FC906"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApiHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AutoRfpApiHandler3E5C7A62": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-039885961427-us-east-1",
     "S3Key": "77c55f4594abb580fc82e97167449345a87c484968c63783e06ab20f3b3b360c.zip"
    },
    "Environment": {
     "Variables": {
      "DATABASE_SECRET_ARN": {
       "Ref": "AutoRfpDbSecretB244B8E1"
      },
      "DATABASE_NAME": "auto_rfp",
      "DATABASE_HOST": {
       "Fn::GetAtt": [
        "AutoRfpDatabaseB374604B",
        "Endpoint.Address"
       ]
      },
      "DATABASE_PORT": {
       "Fn::GetAtt": [
        "AutoRfpDatabaseB374604B",
        "Endpoint.Port"
       ]
      },
      "COGNITO_USER_POOL_ID": {
       "Ref": "AutoRfpUserPool0E232BBC"
      },
      "COGNITO_USER_POOL_CLIENT_ID": {
       "Ref": "AutoRfpUserPoolClientE2FC917B"
      },
      "AWS_ACCOUNT_ID": {
       "Ref": "AWS::AccountId"
      },
      "S3_BUCKET": {
       "Ref": "AutoRfpDocumentsBucketADE14B85"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "AutoRfpDocumentsBucketADE14B85"
      },
      "NODE_ENV": "production"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "AutoRfpApiHandlerServiceRoleD59FC906",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "AutoRfpApiHandlerServiceRoleDefaultPolicy308B0E8E",
    "AutoRfpApiHandlerServiceRoleD59FC906"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApiHandler/Resource",
    "aws:asset:path": "asset.77c55f4594abb580fc82e97167449345a87c484968c63783e06ab20f3b3b360c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AutoRfpApi79FE2555": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "AutoRFP API Gateway for Lambda backend",
    "Name": "AutoRFP API"
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Resource"
   }
  },
  "AutoRfpApiDeployment411E7DF6480daacc3086a36c0a61e197f0a1dfcb": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "AutoRFP API Gateway for Lambda backend",
    "RestApiId": {
     "Ref": "AutoRfpApi79FE2555"
    }
   },
   "DependsOn": [
    "AutoRfpApiapiproxyANYE8AC348A",
    "AutoRfpApiapiproxy9B7B78E4",
    "AutoRfpApiapiFE1BA924"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "AutoRfpApiDeploymentStageprod4D5CB36D": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AutoRfpApiDeployment411E7DF6480daacc3086a36c0a61e197f0a1dfcb"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "AutoRfpApi79FE2555"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/DeploymentStage.prod/Resource"
   }
  },
  "AutoRfpApiapiFE1BA924": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AutoRfpApi79FE2555",
      "RootResourceId"
     ]
    },
    "PathPart": "api",
    "RestApiId": {
     "Ref": "AutoRfpApi79FE2555"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Default/api/Resource"
   }
  },
  "AutoRfpApiapiproxy9B7B78E4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AutoRfpApiapiFE1BA924"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "AutoRfpApi79FE2555"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Default/api/{proxy+}/Resource"
   }
  },
  "AutoRfpApiapiproxyANYApiPermissionAutoRfpInfrastructureStackAutoRfpApiC9AF8380ANYapiproxy7F00535C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AutoRfpApiHandler3E5C7A62",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:039885961427:",
       {
        "Ref": "AutoRfpApi79FE2555"
       },
       "/",
       {
        "Ref": "AutoRfpApiDeploymentStageprod4D5CB36D"
       },
       "/*/api/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Default/api/{proxy+}/ANY/ApiPermission.AutoRfpInfrastructureStackAutoRfpApiC9AF8380.ANY..api.{proxy+}"
   }
  },
  "AutoRfpApiapiproxyANYApiPermissionTestAutoRfpInfrastructureStackAutoRfpApiC9AF8380ANYapiproxyC10D0FF4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AutoRfpApiHandler3E5C7A62",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:039885961427:",
       {
        "Ref": "AutoRfpApi79FE2555"
       },
       "/test-invoke-stage/*/api/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Default/api/{proxy+}/ANY/ApiPermission.Test.AutoRfpInfrastructureStackAutoRfpApiC9AF8380.ANY..api.{proxy+}"
   }
  },
  "AutoRfpApiapiproxyANYE8AC348A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AutoRfpApiHandler3E5C7A62",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AutoRfpApiapiproxy9B7B78E4"
    },
    "RestApiId": {
     "Ref": "AutoRfpApi79FE2555"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpApi/Default/api/{proxy+}/ANY/Resource"
   }
  },
  "AutoRfpOAI0493EA57": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Origin Access Identity for AutoRFP website"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpOAI/Resource"
   }
  },
  "AutoRfpDistribution966746B9": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
       "CachedMethods": [
        "GET",
        "HEAD"
       ],
       "Compress": true,
       "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
       "PathPattern": "/api/*",
       "TargetOriginId": "AutoRfpInfrastructureStackAutoRfpDistributionOrigin26CD39374",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "Comment": "AutoRFP CloudFront Distribution",
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 1800,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCachingMinTTL": 1800,
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "CachedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "Compress": true,
      "TargetOriginId": "AutoRfpInfrastructureStackAutoRfpDistributionOrigin128838BC6",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "AutoRfpWebsiteBucketE42ECF2B",
         "RegionalDomainName"
        ]
       },
       "Id": "AutoRfpInfrastructureStackAutoRfpDistributionOrigin128838BC6",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "AutoRfpOAI0493EA57"
           }
          ]
         ]
        }
       }
      },
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::Join": [
             "",
             [
              "https://",
              {
               "Ref": "AutoRfpApi79FE2555"
              },
              ".execute-api.us-east-1.",
              {
               "Ref": "AWS::URLSuffix"
              },
              "/",
              {
               "Ref": "AutoRfpApiDeploymentStageprod4D5CB36D"
              },
              "/"
             ]
            ]
           }
          ]
         }
        ]
       },
       "Id": "AutoRfpInfrastructureStackAutoRfpDistributionOrigin26CD39374",
       "OriginPath": {
        "Fn::Join": [
         "",
         [
          "/",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Join": [
                "",
                [
                 "https://",
                 {
                  "Ref": "AutoRfpApi79FE2555"
                 },
                 ".execute-api.us-east-1.",
                 {
                  "Ref": "AWS::URLSuffix"
                 },
                 "/",
                 {
                  "Ref": "AutoRfpApiDeploymentStageprod4D5CB36D"
                 },
                 "/"
                ]
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       }
      }
     ],
     "PriceClass": "PriceClass_100"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDistribution/Resource"
   }
  },
  "AutoRfpDeploymentRole6D59E4DD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject",
          "s3:ListBucket",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "AutoRfpDocumentsBucketADE14B85",
            "Arn"
           ]
          },
          {
           "Fn::GetAtt": [
            "AutoRfpWebsiteBucketE42ECF2B",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "AutoRfpDocumentsBucketADE14B85",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "AutoRfpWebsiteBucketE42ECF2B",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": "cloudfront:CreateInvalidation",
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:cloudfront::039885961427:distribution/",
            {
             "Ref": "AutoRfpDistribution966746B9"
            }
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "S3Access"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpDeploymentRole/Resource"
   }
  },
  "AutoRfpSesIdentity2D835474": {
   "Type": "AWS::SES::EmailIdentity",
   "Properties": {
    "EmailIdentity": "example.com"
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/AutoRfpSesIdentity/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Sy3LbMAz8ltxp1nEPPfvRZHxoo7HTXD0QBSuwJVJDgHE9Gv17h6Is222mJ+wuVwCX0EzPpt/09AFOPDHFcVJRrtutgDkqOPGuRTPT7Vtj1HJv37KlykJekdmG3KJE7Yo2Lgi+Ql7hVb9qc2ZnCIScHc0RrK2gtyjPIHiC8zBmYHMRMO81WlFbNMGTnJ+9C00/4L/C2pYemTvFaDwK12ChRK/bbc8Hf0SpvIIvUW7mjYa/TzrlC9btCgRyYFxbFrAGVQo83ma1+Ee4WDtlXGlJnG5/MfrMuSoaRnwBy4qGm9wrneKvul0Ec0xBBpRK5ioy56s88EQWwNipCuq8gJ11BR5Y/+zLU7Cm3w1BrduNS0vs67VjQnH8DphRWM9jGRrqdrm3Y59oR18TMznbKWioTDvV7QZZ5g31Awa4wqZy58vD37CtQJn+px5skF3wBmOQkQyNEs68+30e2Q+Ud1dEQ0KdMpULxd47K7p98VSSnRuDzOsCrZD0OZfR8xQ9nzpWxOIpD5ectzz+cKzb7zVQddvyTui6m7sHFld/GuX+KPPugwr0ffT+3eOTkC3jNy9BmiCdijvVB/7yMZvqx0c9fTgw0cQHK1Sj3qT6BzY4PkbzAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "AutoRfpInfrastructureStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AutoRfpApiEndpointB189D7CD": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AutoRfpApi79FE2555"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AutoRfpApiDeploymentStageprod4D5CB36D"
      },
      "/"
     ]
    ]
   }
  },
  "DatabaseEndpoint": {
   "Description": "RDS Database Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "AutoRfpDatabaseB374604B",
     "Endpoint.Address"
    ]
   }
  },
  "DatabasePort": {
   "Description": "RDS Database Port",
   "Value": {
    "Fn::GetAtt": [
     "AutoRfpDatabaseB374604B",
     "Endpoint.Port"
    ]
   }
  },
  "DatabaseSecretArn": {
   "Description": "Database Secret ARN",
   "Value": {
    "Ref": "AutoRfpDbSecretB244B8E1"
   }
  },
  "UserPoolId": {
   "Description": "Cognito User Pool ID",
   "Value": {
    "Ref": "AutoRfpUserPool0E232BBC"
   }
  },
  "UserPoolClientId": {
   "Description": "Cognito User Pool Client ID",
   "Value": {
    "Ref": "AutoRfpUserPoolClientE2FC917B"
   }
  },
  "DocumentsBucketName": {
   "Description": "S3 Documents Bucket Name",
   "Value": {
    "Ref": "AutoRfpDocumentsBucketADE14B85"
   }
  },
  "WebsiteBucketName": {
   "Description": "S3 Website Bucket Name",
   "Value": {
    "Ref": "AutoRfpWebsiteBucketE42ECF2B"
   }
  },
  "CloudFrontDistributionId": {
   "Description": "CloudFront Distribution ID",
   "Value": {
    "Ref": "AutoRfpDistribution966746B9"
   }
  },
  "CloudFrontDistributionDomainName": {
   "Description": "CloudFront Distribution Domain Name",
   "Value": {
    "Fn::GetAtt": [
     "AutoRfpDistribution966746B9",
     "DomainName"
    ]
   }
  },
  "DeploymentRoleArn": {
   "Description": "Deployment Role ARN",
   "Value": {
    "Fn::GetAtt": [
     "AutoRfpDeploymentRole6D59E4DD",
     "Arn"
    ]
   }
  },
  "Region": {
   "Description": "AWS Region",
   "Value": "us-east-1"
  },
  "ApiGatewayUrl": {
   "Description": "API Gateway URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AutoRfpApi79FE2555"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AutoRfpApiDeploymentStageprod4D5CB36D"
      },
      "/"
     ]
    ]
   }
  },
  "ApiGatewayId": {
   "Description": "API Gateway ID",
   "Value": {
    "Ref": "AutoRfpApi79FE2555"
   }
  },
  "LambdaFunctionArn": {
   "Description": "Lambda Function ARN",
   "Value": {
    "Fn::GetAtt": [
     "AutoRfpApiHandler3E5C7A62",
     "Arn"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}